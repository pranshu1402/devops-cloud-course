name: Release Management

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      working-directory: expense-tracker-main
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run tests
      working-directory: expense-tracker-main
      env:
        DB_URI: sqlite:///:memory:
        SECRET_KEY: test-secret-key
      run: |
        pip install pytest pytest-cov
        python -m pytest tests/ -v --cov=. --cov-report=xml
        
    - name: Generate changelog
      id: changelog
      run: |
        # Extract version from tag
        VERSION=${GITHUB_REF#refs/tags/}
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        
        # Generate changelog
        CHANGELOG=$(git log --pretty=format:"- %s" $(git describe --tags --abbrev=0 HEAD^)..HEAD)
        echo "changelog<<EOF" >> $GITHUB_OUTPUT
        echo "$CHANGELOG" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.changelog.outputs.version }}
        release_name: Release ${{ steps.changelog.outputs.version }}
        body: |
          ## What's Changed
          
          ${{ steps.changelog.outputs.changelog }}
          
          ## Installation
          
          ```bash
          pip install -r requirements.txt
          ```
          
          ## Usage
          
          ```bash
          python main.py
          ```
          
          ## Testing
          
          ```bash
          python -m pytest tests/
          ```
        draft: false
        prerelease: false
        
    - name: Upload release assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./expense-tracker-main/requirements.txt
        asset_name: requirements.txt
        asset_content_type: text/plain
        
    - name: Notify release
      uses: 8398a7/action-slack@v3
      with:
        status: success
        channel: '#releases'
        webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
        text: "ðŸŽ‰ New release ${{ steps.changelog.outputs.version }} has been published!"
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} 